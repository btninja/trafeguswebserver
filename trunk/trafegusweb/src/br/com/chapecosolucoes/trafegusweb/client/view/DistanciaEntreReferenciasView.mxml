<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				layout="vertical"
				showCloseButton="true"
				keyDown="this.controller.keyDownEventHandler(event)"
				creationCompleteEffect="{dissolve,iris}"
				removedEffect="{dissolve,iris}"
				initialize="init()"
				creationComplete="creationComplete()"
				close="this.controller.closeHandler()"
				title="Adicionar distancia entre referencias"
				titleIcon="@Embed(source='assets/1_DIST_32.png')" 
				xmlns:view="br.com.chapecosolucoes.trafegusweb.client.components.zoomcoddetailcomponent.view.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:Dissolve id="dissolve" duration="500"/>
		<mx:Iris id="iris" duration="500"/>
		<mx:StringValidator 
			source="{referencia1Zoom}"
			property="cod"
			requiredFieldError="Campo referência 1 requerido."
			required="true"
			trigger="{ok}"
			triggerEvent="click"
			valid="this.referencia1 = true;this.validaTodos()"
			invalid="this.referencia1 = false;MessageBox.informacao('Campo referência 1 requerido.')"/>
		<mx:StringValidator 
			source="{referencia2Zoom}"
			property="cod"
			requiredFieldError="Campo referência 2 requerido."
			trigger="{ok}"
			triggerEvent="click"
			valid="this.referencia2 = true;this.validaTodos()"
			invalid="this.referencia2 = false;MessageBox.informacao('Campo referência 2 requerido.')"/>
	</fx:Declarations>
	<fx:Metadata>
		[Event(name="distanciaEntreReferenciasAdicionadaEvent",type="br.com.chapecosolucoes.trafegusweb.client.events.DistanciaEntreReferenciasSelecionadaEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import br.com.chapecosolucoes.trafegusweb.client.components.messagebox.MessageBox;
			import br.com.chapecosolucoes.trafegusweb.client.controller.DistanciaEntreReferenciasController;
			import br.com.chapecosolucoes.trafegusweb.client.model.DistanciaEntreReferenciasModel;
			import br.com.chapecosolucoes.trafegusweb.client.model.MainModel;
			
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			private var controller:DistanciaEntreReferenciasController;
			[Bindable]
			public var model:DistanciaEntreReferenciasModel;
			private var referencia1:Boolean;
			private var referencia2:Boolean;
			private function init():void{
				this.controller = new DistanciaEntreReferenciasController();
				this.model = new DistanciaEntreReferenciasModel();
				this.controller.view = this;
				this.controller.model = this.model;
			}
			private function creationComplete():void{
				
			}
			private function validaTodos():void
			{
				if(referencia1 && referencia2)
				{
					this.controller.referenciasSelecionados();
				}
			}
		]]>
	</fx:Script>
	<mx:Form width="100%" height="100%" defaultButton="{ok}">
		<mx:FormItem label="Referencia origem" required="true">
			<view:ZoomCodDetailView id="referencia1Zoom" cod="{this.model.referencia1VO.refeCodigo}" detail="{this.model.referencia1VO.refeDescricao}" clickZoom="this.controller.referencia1ZoomDispatcher()"/>
		</mx:FormItem>
		<mx:FormItem label="Referencia destino" required="true">
			<view:ZoomCodDetailView id="referencia2Zoom" cod="{this.model.referencia2VO.refeCodigo}" detail="{this.model.referencia2VO.refeDescricao}" clickZoom="this.controller.referencia2ZoomDispatcher()"/>
		</mx:FormItem>
	</mx:Form>
	<mx:ControlBar horizontalAlign="right">
		<s:Button id="ok" label="Ok"/>
		<s:Button label="Cancelar" click="this.controller.closeHandler()"/>
	</mx:ControlBar>
</mx:TitleWindow>
