<?xml version="1.0" encoding="utf-8"?>
<resize:ResizableWindow xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:resize="flex.utils.ui.resize.*" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				layout="vertical"
				showCloseButton="true"
				width="720" height="420"
				creationCompleteEffect="{dissolve,iris}"
				removedEffect="{dissolve,iris}"
				initialize="init()"
				creationComplete="creationComplete()"
				close="closeHandler()"
				title="SMs do veiculo"
				titleIcon="@Embed(source='assets/wifi.png')" xmlns:searchInput="br.com.chapecosolucoes.trafegusweb.client.components.searchInput.*" xmlns:view="br.com.chapecosolucoes.trafegusweb.client.components.renderers.view.*">
	<fx:Binding source="this.textInputFiltro.text" destination="MainModel.getInstance().zoomFilter"/>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:Dissolve id="dissolve" duration="500"/>
		<mx:Iris id="iris" duration="500"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import br.com.chapecosolucoes.trafegusweb.client.components.mypopupmanager.MyPopUpManager;
			import br.com.chapecosolucoes.trafegusweb.client.controller.SMGridController;
			import br.com.chapecosolucoes.trafegusweb.client.model.MainModel;
			
			import mx.managers.PopUpManager;
			public var placaVeiculo:String;
			public var controller:SMGridController;
			private function closeHandler():void
			{
				MyPopUpManager.removePopUp(this);
			}
			private function init():void
			{
				this.controller = new SMGridController();
				this.controller.view = this;
			}
			private function creationComplete():void
			{
				this.controller.solicitaSMVeiculo(this.placaVeiculo);
				
				MainModel.getInstance().smArray.filterFunction = this.controller.smFilterFunction;
				MainModel.getInstance().smArray.refresh();
			}
		]]>
	</fx:Script>
	<searchInput:SearchInputFX
		id="textInputFiltro"
		width="100%" 
		text="{MainModel.getInstance().zoomFilter}"
		keyUp="MainModel.getInstance().smArray.refresh()"
		refreshEvent="this.controller.atualizaListaSM()"/>
	<mx:DataGrid
		id="grid"
		dataProvider="{MainModel.getInstance().smArray}"
		doubleClickEnabled="true"
		doubleClick="this.controller.editarSM()"
		width="100%"
		height="100%">
		<mx:columns>
			<mx:DataGridColumn sortable="false" width="20" headerRenderer="br.com.chapecosolucoes.trafegusweb.client.components.renderers.view.DataGridHeaderRenderer"/>
			<mx:DataGridColumn headerText="Número da Viagem" dataField="numeroViagem"/>
			<mx:DataGridColumn headerText="Operação" dataField="operacao"/>
			<mx:DataGridColumn headerText="Placa" dataField="placaVeiculo"/>
			<mx:DataGridColumn headerText="Terminal" dataField="terminal"/>
			<mx:DataGridColumn headerText="Data Cadastro" dataField="dataCadastro"/>
			<mx:DataGridColumn headerText="Transportador" dataField="nomeTransportador"/>
			<mx:DataGridColumn headerText="Embarcador" dataField="nomeEmbarcador"/>
			<mx:DataGridColumn headerText="Origem" dataField="descricaoOrigem"/>
			<mx:DataGridColumn headerText="Destino" dataField="descricaoDestino"/>
			<mx:DataGridColumn headerText="Prev. inicio" dataField="prevInicio"/>
			<mx:DataGridColumn headerText="Prev. fim" dataField="prevFim"/>
		</mx:columns>
	</mx:DataGrid>
	<view:PaginableComponent 
		id="paginable"/>
	<mx:ControlBar width="100%" horizontalAlign="right">
		<s:Button label="Adicionar" click="this.controller.novaSM()"/>
		<s:Button label="Editar" click="this.controller.editarSM()"/>
		<s:Button label="Voltar" click="this.closeHandler()"/>
	</mx:ControlBar>
</resize:ResizableWindow>
