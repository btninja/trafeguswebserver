<?xml version="1.0" encoding="utf-8"?>
<resize:ResizableWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				layout="vertical"
				showCloseButton="true"
				movable="true"
				resizable="false"
				keyDown="this.controller.keyDownEventHandler(event)"
				creationCompleteEffect="{dissolve,iris}"
				removedEffect="{dissolve,iris}"
				initialize="init()"
				creationComplete="this.creationComplete()"
				close="this.controller.closeHandler()"
				title="Distancia entre referencias"
				titleIcon="@Embed(source='assets/1_DIST_32.png')"
				xmlns:searchInput="br.com.chapecosolucoes.trafegusweb.client.components.searchInput.*" 
				xmlns:view="br.com.chapecosolucoes.trafegusweb.client.components.renderers.view.*"
				xmlns:resize="flex.utils.ui.resize.*">
	<fx:Binding source="this.textInputFiltro.text" destination="MainModel.getInstance().zoomFilter"/>
	<fx:Metadata>
		[Event(name="distanciaEntreReferenciasSelecionadaEvent",type="br.com.chapecosolucoes.trafegusweb.client.events.DistanciaEntreReferenciasSelecionadaEvent")]
		[Event(name="distanciaEntreReferenciasAdicionadaEvent",type="br.com.chapecosolucoes.trafegusweb.client.events.DistanciaEntreReferenciasSelecionadaEvent")]
		[Event(name="limparDistanciasEvent",type="br.com.chapecosolucoes.trafegusweb.client.events.LimparDistanciasEvent")]
	</fx:Metadata>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:Dissolve id="dissolve" duration="500"/>
		<mx:Iris id="iris" duration="500"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import br.com.chapecosolucoes.trafegusweb.client.components.sjd.managers.ResizeManager;
			import br.com.chapecosolucoes.trafegusweb.client.controller.DistanciaDeAteReferenciasController;
			import br.com.chapecosolucoes.trafegusweb.client.model.MainModel;
			import br.com.chapecosolucoes.trafegusweb.client.vo.DistanciaDeAteReferenciaEVeiculoVO;
			import br.com.chapecosolucoes.trafegusweb.client.vo.DistanciaDeAteReferenciasVO;
			import br.com.chapecosolucoes.trafegusweb.client.vo.DistanciaDeAteVO;
			import br.com.chapecosolucoes.trafegusweb.client.vo.ReferenciaVO;
			public var controller:DistanciaDeAteReferenciasController;
			private function init():void
			{
				ResizeManager.enableResize(this,50);
			}
			public function creationComplete():void
			{
				this.controller = new DistanciaDeAteReferenciasController();
				this.controller.view = this;
				
				MainModel.getInstance().distanciaEntreReferencias.filterFunction = this.controller.distanciaEntreReferenciasFilterFunction;
			}
			private function labelFunction(item:Object,column:DataGridColumn):String
			{
				switch(column.headerText)
				{
					case "Referencia origem":
						return ReferenciaVO(DistanciaDeAteReferenciasVO(item).de).refeDescricao;
					case "Grupo origem":
						return ReferenciaVO(DistanciaDeAteReferenciasVO(item).de).descricao;
					case "Referencia destino":
						return ReferenciaVO(DistanciaDeAteReferenciasVO(item).ate).refeDescricao;
					case "Grupo destino":
						return ReferenciaVO(DistanciaDeAteReferenciasVO(item).ate).descricao;
					case "Distancia":
						return DistanciaDeAteVO(item).distanciaDeAte();
					default:
						return "";
				}
			}
		]]>
	</fx:Script>
	<searchInput:SearchInputFXBase
		id="textInputFiltro"
		width="100%" 
		text="{MainModel.getInstance().zoomFilter}"
		keyUp="MainModel.getInstance().distanciaEntreReferencias.refresh()"/>
	<mx:DataGrid
		id="grid"
		width="100%"
		height="100%"
		allowMultipleSelection="true"
		labelFunction="labelFunction"
		itemClick="this.controller.itemClickEventHandler(event)"
		dataProvider="{MainModel.getInstance().distanciaEntreReferencias}">
		<mx:columns>
			<mx:DataGridColumn headerText="Referencia origem"/>
			<mx:DataGridColumn headerText="Grupo origem"/>
			<mx:DataGridColumn headerText="Referencia destino"/>
			<mx:DataGridColumn headerText="Grupo destino"/>
			<mx:DataGridColumn headerText="Distancia"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:ControlBar width="100%" horizontalAlign="right">
		<s:Button id="adicionar" label="Adicionar" click="this.controller.adicionar()"/>
		<s:Button id="remover" label="Remover" click="this.controller.remover()"/>
		<s:Button id="cancel" label="Fechar" click="this.controller.closeHandler()"/>
	</mx:ControlBar>
</resize:ResizableWindow>