<?xml version="1.0" encoding="utf-8"?>
<resize:ResizableWindow 
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:resize="flex.utils.ui.resize.*"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	layout="vertical"
	width="720"
	height="420"
	movable="true"
	resizable="false"
	showCloseButton="true"
	creationCompleteEffect="{dissolve,iris}"
	removedEffect="{dissolve,iris}"
	initialize="init()"
	creationComplete="creationComplete()"
	close="this.controller.closeHandler()"
	title="Tipo Operação"
	titleIcon="@Embed(source='assets/Map3.png')"
	xmlns:searchInput="br.com.chapecosolucoes.trafegusweb.client.components.searchInput.*"
	xmlns:view="br.com.chapecosolucoes.trafegusweb.client.components.renderers.view.*">
	<fx:Metadata>
		[Event(name="topeTipoOperacaoSelecionadoEvent",type="br.com.chapecosolucoes.trafegusweb.client.events.TopeTipoOperacaoSelecionadoEvent")]
	</fx:Metadata>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:Dissolve id="dissolve"
					 duration="500"/>
		<mx:Iris id="iris"
				 duration="500"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import br.com.chapecosolucoes.trafegusweb.client.components.zoom.controller.TopeTipoOperacaoZoomController;
			import br.com.chapecosolucoes.trafegusweb.client.components.sjd.managers.ResizeManager;
			import br.com.chapecosolucoes.trafegusweb.client.model.MainModel;
			
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			private var controller:TopeTipoOperacaoZoomController;
			
			private function init():void
			{
				this.controller=new TopeTipoOperacaoZoomController();
				this.controller.view=this;
				//MainModel.getInstance().topeTipoOperacaoArray.filterFunction=this.controller.topeTipoOperacaoFilterFunction;
				MainModel.getInstance().topeTipoOperacaoArray.refresh();
				
				ResizeManager.enableResize(this,50);
			}
			
			private function inicializaListaTipoTransporte():void
			{
				if (MainModel.getInstance().topeTipoOperacaoArray.length == 0)
				{
					this.controller.atualizaListaTopeTipoOperacao();
				}
			}
			
			private function creationComplete():void
			{
				this.inicializaListaTipoTransporte();
			}
		]]>
	</fx:Script>
	<searchInput:AdvancedSearchInputFX 
		id="textInputFiltro"
	    width="100%"
	    dataGrid="{this.grid}"
	   advancedSearchEvent="this.controller.advancedSearchEventHandler(event)"
	   refreshEvent="this.controller.atualizaListaTopeTipoOperacao()"/>
	<view:DataGridFX 
		id="grid"
		 width="100%"
		 height="100%"
		 doubleClickEnabled="true"
		 doubleClick="this.controller.topeTipoOperacaoSelecionado()"
		 dataProvider="{MainModel.getInstance().topeTipoOperacaoArray}"
		 toolTip="Clique sobre o codigo do local para exibir os detalhes.">
		<view:columns>
			<mx:DataGridColumn sortable="false"
							   width="20"
							   dataField="count"
							   headerRenderer="br.com.chapecosolucoes.trafegusweb.client.components.renderers.view.DataGridHeaderRenderer"/>
			<mx:DataGridColumn headerText="Código"
							   dataField="topeCodigo"/>
			<mx:DataGridColumn headerText="Descrição"
							   dataField="topeDescricao"/>
		</view:columns>
	</view:DataGridFX>
	<view:PaginableComponent id="paginable"
							 totalRecords="{MainModel.getInstance().totalListaTopeTipoOperacao}"
							 itensPorPagina="{MainModel.getInstance().itensPorPaginaVO.itensPorPagina}"
							 next="this.controller.solicitaListaTopeTipoOperacao(event)"
							 prev="this.controller.solicitaListaTopeTipoOperacao(event)"
							 first="this.controller.solicitaListaTopeTipoOperacao(event)"
							 last="this.controller.solicitaListaTopeTipoOperacao(event)"/>
	<mx:ControlBar width="100%"
				   horizontalAlign="right">
		<s:Button label="Ok"
				  click="this.controller.topeTipoOperacaoSelecionado()"/>
		<s:Button label="Cancel"
				  click="this.controller.closeHandler()"/>
	</mx:ControlBar>
</resize:ResizableWindow>