<?xml version="1.0" encoding="utf-8"?>
<resize:ResizableWindow xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:resize="flex.utils.ui.resize.*"
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				layout="vertical"
				showCloseButton="true"
				keyDown="this.controller.keyDownEventHandler(event)"
				creationCompleteEffect="{dissolve,iris}"
				removedEffect="{dissolve,iris}"
				creationComplete="this.creationComplete()"
				close="this.controller.closeHandler()"
				title="Distancia entre veiculos"
				titleIcon="@Embed(source='assets/1_DIST_32.png')"
				xmlns:searchInput="br.com.chapecosolucoes.trafegusweb.client.components.searchInput.*" 
				xmlns:view="br.com.chapecosolucoes.trafegusweb.client.components.renderers.view.*">
	<fx:Binding source="this.textInputFiltro.text" destination="MainModel.getInstance().zoomFilter"/>
	<fx:Metadata>
		[Event(name="distanciaEntreVeiculosAdicionadaEvent",type="br.com.chapecosolucoes.trafegusweb.client.events.DistanciaEntreVeiculosSelecionadaEvent")]
		[Event(name="distanciaEntreVeiculosSelecionadaEvent",type="br.com.chapecosolucoes.trafegusweb.client.events.DistanciaEntreVeiculosSelecionadaEvent")]
		[Event(name="limparDistanciasEvent",type="br.com.chapecosolucoes.trafegusweb.client.events.LimparDistanciasEvent")]
	</fx:Metadata>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:Dissolve id="dissolve" duration="500"/>
		<mx:Iris id="iris" duration="500"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import br.com.chapecosolucoes.trafegusweb.client.controller.DistanciaDeAteVeiculosController;
			import br.com.chapecosolucoes.trafegusweb.client.model.MainModel;
			import br.com.chapecosolucoes.trafegusweb.client.vo.DistanciaDeAteReferenciasVO;
			import br.com.chapecosolucoes.trafegusweb.client.vo.DistanciaDeAteVO;
			import br.com.chapecosolucoes.trafegusweb.client.vo.DistanciaDeAteVeiculosVO;
			import br.com.chapecosolucoes.trafegusweb.client.vo.PosicaoVeiculoVO;
			public var controller:DistanciaDeAteVeiculosController;
			public function creationComplete():void
			{
				this.controller = new DistanciaDeAteVeiculosController();
				this.controller.view = this;
				
				MainModel.getInstance().distanciaEntreVeiculos.filterFunction = this.controller.distanciaEntreVeiculosFilterFunction;
			}
			private function labelFunction(item:Object,column:DataGridColumn):String
			{
				switch(column.headerText)
				{
					case "Placa origem":
						return PosicaoVeiculoVO(DistanciaDeAteVeiculosVO(item).de).vehiclePlate;
					case "Posição origem":
						return PosicaoVeiculoVO(DistanciaDeAteVeiculosVO(item).de).gpsDescSis;
					case "Data e hora origem":
						return PosicaoVeiculoVO(DistanciaDeAteVeiculosVO(item).de).dataEHora;
					case "Placa destino":
						return PosicaoVeiculoVO(DistanciaDeAteVeiculosVO(item).ate).vehiclePlate;
					case "Posição destino":
						return PosicaoVeiculoVO(DistanciaDeAteVeiculosVO(item).ate).gpsDescSis;
					case "Data e hora destino":
						return PosicaoVeiculoVO(DistanciaDeAteVeiculosVO(item).ate).dataEHora;
					case "Distancia":
						return DistanciaDeAteVO(item).distanciaDeAte();
					default:
						return "";
				}
			}
		]]>
	</fx:Script>
	<searchInput:SearchInputFXBase
		id="textInputFiltro"
		width="100%" 
		text="{MainModel.getInstance().zoomFilter}"
		keyUp="MainModel.getInstance().distanciaEntreVeiculos.refresh()"/>
	<mx:DataGrid
		id="grid"
		width="100%"
		height="100%"
		allowMultipleSelection="true"
		labelFunction="labelFunction"
		itemClick="this.controller.itemClickEventHandler(event)"
		dataProvider="{MainModel.getInstance().distanciaEntreVeiculos}">
		<mx:columns>
			<mx:DataGridColumn headerText="Placa origem"/>
			<mx:DataGridColumn headerText="Posição origem"/>
			<mx:DataGridColumn headerText="Data e hora origem"/>
			<mx:DataGridColumn headerText="Placa destino"/>
			<mx:DataGridColumn headerText="Posição destino"/>
			<mx:DataGridColumn headerText="Data e hora destino"/>
			<mx:DataGridColumn headerText="Distancia"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:ControlBar width="100%" horizontalAlign="right">
		<s:Button id="adicionar" label="Adicionar" click="this.controller.adicionar()"/>
		<s:Button id="remover" label="Remover" click="this.controller.remover()"/>
		<s:Button id="cancel" label="Fechar" click="this.controller.closeHandler()"/>
	</mx:ControlBar>
</resize:ResizableWindow>