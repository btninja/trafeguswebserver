<?xml version="1.0" encoding="utf-8"?>
<s:Application width="100%"
			   height="100%"
			   initialize="init()"
			   preloader="br.com.chapecosolucoes.trafegusweb.client.components.custompreloader.CustomPreloader"
			   preinitialize="{preinitializeHandler(event)}"
			   xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:view="br.com.chapecosolucoes.trafegusweb.client.view.*"
			   xmlns:view1="br.com.chapecosolucoes.trafegusweb.client.components.renderers.view.*"
			   xmlns:mxeffects="com.adobe.ac.mxeffects.*"
			   xmlns:ws="br.com.chapecosolucoes.trafegusweb.client.ws.*">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>

	</fx:Declarations>
	<fx:Style source="styles/customScroll.css"/>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/halo";
		@namespace containers "com.iwobanas.containers.*";
		
		containers|CollapsiblePanel {
			skin-class: ClassReference('com.iwobanas.skins.CollapsiblePanelSkin');
		}
		
		.backgroundImage
		{
			backgroundImage:Embed("assets/background.jpg");
			backgroundImageFillMode: repeat;
		}
		
	</fx:Style>
    <fx:Script>
        <![CDATA[
            import br.com.chapecosolucoes.trafegusweb.client.components.messagebox.MessageBox;
            import br.com.chapecosolucoes.trafegusweb.client.events.CloseAppEvent;
            import br.com.chapecosolucoes.trafegusweb.client.events.LoginEvent;
            import br.com.chapecosolucoes.trafegusweb.client.model.UsuarioLogado;
            import br.com.chapecosolucoes.trafegusweb.client.utils.ParserResult;
            import br.com.chapecosolucoes.trafegusweb.client.ws.TrafegusWS;
            import mx.events.FlexEvent;
            import mx.rpc.events.ResultEvent;

			private var xml:XML;

//            private var myContextMenu:ContextMenu;

			private function init():void
			{
				Security.allowDomain("maps.googleapis.com/maps/flashapi");
				Security.loadPolicyFile("http://localhost:8080/trafegusws/crossdomain.xml");
				//Security.loadPolicyFile("http://187.55.209.16:8080/trafegusws/crossdomain.xml");
			/*   xml = <Context>
					   <Menu>Novo Agendamento</Menu>
				   </Context>;
			   var xmlListCollection:XMLListCollection = new XMLListCollection(xml.Menu);
			   var resultArray:Array = xmlListCollection.toArray();
			   myContextMenu = new ContextMenu();
			   myContextMenu.hideBuiltInItems();
			   var menuItem:ContextMenuItem;
			   for each (var obj:Object in resultArray)
			   {
				   menuItem = new ContextMenuItem(obj.toString());
				   menuItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, contextMenuHandler);
				   this.myContextMenu.customItems.push(menuItem);
			   }
			   backGround.contextMenu = myContextMenu;
			   */
			}

//            private function contextMenuHandler(event:ContextMenuEvent):void
//            {
//                MessageBox.atencao("Funcionalidade nÃ£o implementada");
//            }

			protected function preinitializeHandler(event:FlexEvent):void
			{
				var req:URLRequest=new URLRequest("config.xml");
				var loader:URLLoader=new URLLoader(req);
				loader.addEventListener(Event.COMPLETE, xmlConfigLoaderComplete);

				function xmlConfigLoaderComplete(e:Event):void
				{
					UsuarioLogado.getInstance().wsdl=XML(loader.data).wsdl;
				}
			}

			private function closeAppEventHandler(event:CloseAppEvent):void
			{
				TrafegusWS.getIntance().logout(logoutResultHandler);
			}

			private function logoutResultHandler(event:ResultEvent):void
			{
				var resultArray:Array=ParserResult.parserDefault(event);
				for each (var obj:Object in resultArray)
				{
					if (obj.row.toString() == "OK")
					{
						MessageBox.informacao("Saiu");
					}
				}
				loginViewStack.selectedIndex=0;
			}

			private function loginHandler(event:LoginEvent):void
			{
				if (event.logged == true)
				{
					loginViewStack.selectedIndex=1;
				}
			}
		]]>
	</fx:Script>
	<s:BorderContainer id="backGround"
					   width="100%"
					   height="100%"
					   styleName="backgroundImage">
		<mx:ViewStack id="loginViewStack"
					  width="100%"
					  height="100%">
			<s:NavigatorContent id="loginView"
								label="Login">
				<view1:LoginComponent width="100%"
									  height="100%"
									  loginEvent="loginHandler(event)"/>
			</s:NavigatorContent>
			<s:NavigatorContent id="mainView"
								label="MainView">
				<view:MainView2 width="100%"
								height="100%"
								closeAppEvent="closeAppEventHandler(event)"/>
			</s:NavigatorContent>
		</mx:ViewStack>
	</s:BorderContainer>
</s:Application>
